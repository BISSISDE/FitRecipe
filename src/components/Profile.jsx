import React, { useState } from "react";
import { useAuth } from "../context/AuthContext.jsx";
import { useNavigate } from "react-router-dom";
import "./Profile.css";

export default function Profile() {
  const { user, logout } = useAuth();
  const [name, setName] = useState(() => {
    const users = JSON.parse(localStorage.getItem("users") || "[]");
    const found = users.find((u) => u.email === user?.email);
    return found?.name || "";
  });
  const [newPass, setNewPass] = useState("");
  const [showPass, setShowPass] = useState(false);
  const [msg, setMsg] = useState("");
  const [nameMsg, setNameMsg] = useState("");
  const navigate = useNavigate();

  const handleSaveName = () => {
    if (!name.trim()) {
      setNameMsg("–ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç—ã–º!");
      return;
    }
    const users = JSON.parse(localStorage.getItem("users") || "[]");
    const idx = users.findIndex((u) => u.email === user.email);
    if (idx !== -1) {
      users[idx].name = name;
      localStorage.setItem("users", JSON.stringify(users));
      setNameMsg("–í–∞—à–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!");
    } else {
      setNameMsg("–û—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
    setTimeout(() => setNameMsg(""), 2000);
  };

  const handleChangePass = () => {
    if (newPass.length < 6) {
      setMsg("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!");
      return;
    }
    const users = JSON.parse(localStorage.getItem("users") || "[]");
    const idx = users.findIndex((u) => u.email === user.email);
    if (idx !== -1) {
      users[idx].password = newPass;
      localStorage.setItem("users", JSON.stringify(users));
      setMsg("–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!");
      setNewPass("");
    } else {
      setMsg("–û—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    }
    setTimeout(() => setMsg(""), 2000);
  };

  const handleLogout = () => {
    logout();
    navigate("/login");
  };

  if (!user) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;

  return (
    <div className="profile_container">
      <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>

      <div className="profile_field">
        <div className="profile_label">Email:</div>
        <div>{user.email}</div>
      </div>

      <div className="profile_field">
        <div className="profile_label">–í–∞—à–µ –∏–º—è:</div>
        <input
          type="text"
          value={name}
          className="profile_input"
          onChange={(e) => setName(e.target.value)}
        />
        <button className="profile_button" onClick={handleSaveName}>
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
        {nameMsg && (
          <div
            className="profile_message"
            style={{
              color: nameMsg.includes("—É—Å–ø–µ—à–Ω–æ") ? "lightgreen" : "tomato",
            }}
          >
            {nameMsg}
          </div>
        )}
      </div>

      <div className="profile_field">
        <div className="profile_label">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</div>
        <div className="pass_container">
          <input
            type={showPass ? "text" : "password"}
            placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å"
            value={newPass}
            className="profile_input"
            onChange={(e) => setNewPass(e.target.value)}
          />
          <span
            className="pass_eye"
            onClick={() => setShowPass((v) => !v)}
            title={showPass ? "–°–∫—Ä—ã—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å"}
          >
            {showPass ? "üôà" : "üëÅÔ∏è"}
          </span>
        </div>
        <button className="profile_button" onClick={handleChangePass}>
          –ò–∑–º–µ–Ω–∏—Ç—å
        </button>
        {msg && (
          <div
            className="profile_message"
            style={{ color: msg.includes("—É—Å–ø–µ—à–Ω–æ") ? "lightgreen" : "tomato" }}
          >
            {msg}
          </div>
        )}
      </div>

      <button className="profile_button profile_logout" onClick={handleLogout}>
        –í—ã–π—Ç–∏
      </button>
    </div>
  );
}
